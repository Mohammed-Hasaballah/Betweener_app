{
    "sourceFile": "lib/views/login_view.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1691159225229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1691322386758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n import 'package:tt9_betweener_challenge/views/widgets/custom_text_form_field.dart';\r\n import 'package:tt9_betweener_challenge/views/widgets/primary_outlined_button_widget.dart';\r\n import 'package:tt9_betweener_challenge/views/widgets/secondary_button_widget.dart';\r\n \r\n-import '../controllers/login_controller.dart';\r\n+import '../controllers/auth_controller.dart';\r\n import 'widgets/google_button_widget.dart';\r\n \r\n class LoginView extends StatefulWidget {\r\n   static String id = '/loginView';\r\n"
                }
            ],
            "date": 1691159225229,
            "name": "Commit-0",
            "content": "import 'package:email_validator/email_validator.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:flutter_svg/flutter_svg.dart';\r\nimport 'package:shared_preferences/shared_preferences.dart';\r\nimport 'package:tt9_betweener_challenge/assets.dart';\r\nimport 'package:tt9_betweener_challenge/models/user.dart';\r\nimport 'package:tt9_betweener_challenge/views/main_app_view.dart';\r\nimport 'package:tt9_betweener_challenge/views/register_view.dart';\r\nimport 'package:tt9_betweener_challenge/views/widgets/custom_text_form_field.dart';\r\nimport 'package:tt9_betweener_challenge/views/widgets/primary_outlined_button_widget.dart';\r\nimport 'package:tt9_betweener_challenge/views/widgets/secondary_button_widget.dart';\r\n\r\nimport '../controllers/login_controller.dart';\r\nimport 'widgets/google_button_widget.dart';\r\n\r\nclass LoginView extends StatefulWidget {\r\n  static String id = '/loginView';\r\n\r\n  const LoginView({super.key});\r\n\r\n  @override\r\n  State<LoginView> createState() => _LoginViewState();\r\n}\r\n\r\nclass _LoginViewState extends State<LoginView> {\r\n  TextEditingController emailController = TextEditingController();\r\n  TextEditingController passwordController = TextEditingController();\r\n  final _formKey = GlobalKey<FormState>();\r\n\r\n  void submitLogin() {\r\n    if (_formKey.currentState!.validate()) {\r\n      final body = {\r\n        'email': emailController.text,\r\n        'password': passwordController.text\r\n      };\r\n\r\n      login(body).then((user) async {\r\n        //save user locally\r\n        final SharedPreferences prefs = await SharedPreferences.getInstance();\r\n        await prefs.setString('user', userToJson(user));\r\n\r\n        if (mounted) {\r\n          Navigator.pushNamed(context, MainAppView.id);\r\n        }\r\n      }).catchError((err) {\r\n        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\r\n          content: Text(err.toString()),\r\n          backgroundColor: Colors.red,\r\n        ));\r\n      });\r\n\r\n      // Navigator.pushNamed(context, MainAppView.id);\r\n    }\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      body: SingleChildScrollView(\r\n        child: Padding(\r\n          padding: const EdgeInsets.symmetric(horizontal: 32.0),\r\n          child: SizedBox(\r\n            height: MediaQuery.of(context).size.height,\r\n            child: Form(\r\n              key: _formKey,\r\n              child: Column(\r\n                children: [\r\n                  const Spacer(),\r\n                  SizedBox(\r\n                      height: MediaQuery.of(context).size.height / 5,\r\n                      child: Hero(\r\n                          tag: 'authImage',\r\n                          child: SvgPicture.asset(AssetsData.authImage))),\r\n                  const Spacer(),\r\n                  CustomTextFormField(\r\n                    controller: emailController,\r\n                    hint: 'example@gmail.com',\r\n                    keyboardType: TextInputType.emailAddress,\r\n                    autofillHints: const [AutofillHints.email],\r\n                    label: 'Email',\r\n                    validator: (value) {\r\n                      if (value == null || value.isEmpty) {\r\n                        return 'please enter the email';\r\n                      } else if (!EmailValidator.validate(value)) {\r\n                        return 'please enter a valid email';\r\n                      }\r\n                      return null;\r\n                    },\r\n                  ),\r\n                  const SizedBox(\r\n                    height: 14,\r\n                  ),\r\n                  CustomTextFormField(\r\n                    controller: passwordController,\r\n                    hint: 'Enter password',\r\n                    label: 'password',\r\n                    autofillHints: const [AutofillHints.password],\r\n                    password: true,\r\n                    validator: (value) {\r\n                      if (value == null || value.isEmpty) {\r\n                        return 'please enter the password';\r\n                      }\r\n                      return null;\r\n                    },\r\n                  ),\r\n                  const SizedBox(\r\n                    height: 24,\r\n                  ),\r\n                  SecondaryButtonWidget(onTap: submitLogin, text: 'LOGIN'),\r\n                  const SizedBox(\r\n                    height: 24,\r\n                  ),\r\n                  PrimaryOutlinedButtonWidget(\r\n                      onTap: () {\r\n                        Navigator.pushNamed(context, RegisterView.id);\r\n                      },\r\n                      text: 'REGISTER'),\r\n                  const SizedBox(\r\n                    height: 12,\r\n                  ),\r\n                  Text(\r\n                    '-  or  -',\r\n                    style: TextStyle(\r\n                        color: Colors.grey.shade500,\r\n                        fontSize: 18,\r\n                        fontWeight: FontWeight.w300),\r\n                  ),\r\n                  const SizedBox(\r\n                    height: 12,\r\n                  ),\r\n                  GoogleButtonWidget(onTap: () {}),\r\n                  const Spacer(),\r\n                ],\r\n              ),\r\n            ),\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}